#!/usr/bin/env bash

# We are specifying the package mangager 'pacman -S' and storing it into a variable
# Adding '--confirm' to bypass the Y/n which specifies that the installation should proceed without prompting the user
# https://bbs.archlinux.org/viewtopic.php?id=151484
package_manager="pacman -S --noconfirm"

# Define the file path that contains the list of packages to install
# The 'packages' file should have one package name per line
file="packages"

# Reads each line of the 'packages' list and stores it in a variable 'package'
# https://www.javatpoint.com/bash-read-file
while read package; do

	# Checks if the package is empty OR lines starts with '#', which indicates a comment
	# If the condition is met, the loop will skip the current line and continue onto the next one
	# https://ioflood.com/blog/bash-and-operator/#:~:text=The%20'%26%26'%20operator%20in%20Bash%20allows%20for%20the%20execution%20of,moving%20on%20to%20the%20next.
	# https://tldp.org/LDP/Bash-Beginners-Guide/html/sect_09_05.html
	[[ -z "$package" || "$package" == \#* ]] && continue
	
	# Checks if the package is already installed and >/dev/null to supresses the standard output
	# If the package is installed, the command 'pacman Q' will succeed
	# https://devhints.io/pacman
	# https://learning.oreilly.com/videos/bash-shell-scripting/9780137689064/9780137689064-BSS2_03_08_02/
	if pacman -Q "$package"&>/dev/null; then

		# Outputs to the package is already installed
		echo "$(pacman -Q "$package") is already installed."

	# If the package is not installed, then it will install the package
	else

		# Outputs that the package is being installed
		echo "Installing $package"
	# This will execute the package manager command and the >/dev/null supresses the standard output
	$package_manager "$package"&>/dev/null
	fi

# Redirects the contents of the file specified by the variable $file into the while loop
# This causes the while loop to read each line of the file until it reaches the end 
# https://stackoverflow.com/questions/35766024/done-filename-in-the-while-loop
done < "$file"

